//
//  LoginWorker.swift
//  BrazilTestiOS
//
//  Created by Mujeeb Ulla Shariff on 01/11/19.
//  Copyright (c) 2019 Mujeeb Ulla Shariff. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class LoginWorker {
  
  // Validates username to be an email or cpf number
  func validateUser(username: String) -> Bool {
    do {
      if try NSRegularExpression(pattern: "^([0-9]{3}\\.[0-9]{3}\\.[0-9]{3}-[0-9]{2})|([A-Z0-9a-z.0-9_%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4})$", options: .caseInsensitive).firstMatch(in: username, options: [], range: NSRange(location: 0, length: username.count)) == nil {
        return false
      }
    } catch {
      return false
    }
    return true
  }
  
  // Validates password to contain atleast a capital letter, a special character & a alphanumeric value
  func validatePassword(password: String) -> Bool {
    do {
      if try NSRegularExpression(pattern: "^.*(?=.*[A-Z])(?=.*[a-zA-Z])(?=.*\\d)(?=.*[!@#$%&?]).*$", options: []).firstMatch(in: password, options: [], range: NSRange(location: 0, length: password.count)) == nil {
        return false
      }
    } catch {
      return false
    }    
    return true
  }
  
  // makes a post request with username & password & returns the response through a completion handler
  func login(username: String, password: String, completion: @escaping (Bool, LoginResponse?, Error?) -> Void) {
    let body = LoginRequest(user: username, password: password)
    Network.postRequest(url: NetworkRouter.Endpoints.login.url, responseType: LoginResponse.self, body: body) { response, error in
      if let response = response {
        completion(true, response, nil)
      } else {
        completion(false, nil, error)
      }
    }
  }
}
