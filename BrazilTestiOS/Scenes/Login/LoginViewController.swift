//
//  LoginViewController.swift
//  BrazilTestiOS
//
//  Created by Mujeeb Ulla Shariff on 01/11/19.
//  Copyright (c) 2019 Mujeeb Ulla Shariff. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginDisplayLogic: class
{
  func displaySomething(viewModel: Login.LoginModel.ViewModel)
}

class LoginViewController: UIViewController, LoginDisplayLogic
{
  var interactor: LoginBusinessLogic?
  var router: (NSObjectProtocol & LoginRoutingLogic & LoginDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = LoginInteractor()
    let presenter = LoginPresenter()
    let router = LoginRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
    
  @IBAction func unwindToVC1(segue:UIStoryboardSegue) { }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
  }
  
  // MARK: Login
    
  @IBOutlet weak var username: UITextField!
  @IBOutlet weak var password: UITextField!
  let utils = Utilities()

  @IBAction func loginBtnClicked(_ sender: Any) {
    login()
  }
  
  func login()
  {
    utils.showActivityIndicator(view: self.view)
    let userID = username.text
    let passwordValue = password.text
    let request = Login.LoginModel.Request(user: userID, password: passwordValue)
    interactor?.login(request: request)
  }
  
  func displaySomething(viewModel: Login.LoginModel.ViewModel)
  {
    utils.hideActivityIndicator(view: self.view)
    
    if(viewModel.success)
    {
        performSegue(withIdentifier: "GoToHome", sender: nil)
    } else {
        username.text = nil
        password.text = nil
    }
  }
}
